{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"athackst/dockerfiles These are multi-stage docker images I use for developing with VSCode . See how I develop with vscode and docker . Instructions on how to duplicate my IDE: vscode, docker, and ros2 vscode, docker, and github pages Quick start Grab the docker image from docker hub athackst/ros athackst/ros2 athackst/gazebo atahckst/igntion athackst/github Set up a vscode workspace Build the dockerfiles Create the docker images ./build.py all To see help information on the update script ./build.py --help Reference generate.py Dictionary of dockerfile templates and settings. Source code in workspace/generate.py def templates (): \"\"\"Dictionary of dockerfile templates and settings.\"\"\" return { 'ros2' : [ { 'name' : 'foxy' , 'ubuntu_distro' : '20.04' , 'ros_distro' : 'foxy' , 'python_version' : '3.8' }, { 'name' : 'eloquent' , 'ubuntu_distro' : '18.04' , 'ros_distro' : 'eloquent' , 'python_version' : '3.6' }, { 'name' : 'dashing' , 'ubuntu_distro' : '18.04' , 'ros_distro' : 'dashing' , 'python_version' : '3.6' }, { 'name' : 'crystal' , 'ubuntu_distro' : '16.04' , 'ros_distro' : 'crystal' , 'python_version' : '3.6' }, ], 'ros' : [ { 'name' : 'noetic' , 'ubuntu_distro' : '20.04' , 'ros_distro' : 'noetic' , 'python_version' : '3' , 'python_env' : '3' }, { 'name' : 'melodic' , 'ubuntu_distro' : '18.04' , 'ros_distro' : 'melodic' , 'python_version' : '2.7' , 'python_env' : '' }, { 'name' : 'kinetic' , 'ubuntu_distro' : '16.04' , 'ros_distro' : 'kinetic' , 'python_version' : '2.7' , 'python_env' : '' } ], 'ignition' : [ { 'name' : 'citadel' , 'ubuntu_distro' : '18.04' , 'ign_distro' : 'citadel' , 'gazebo_version' : '3' }, { 'name' : 'blueprint' , 'ubuntu_distro' : '18.04' , 'ign_distro' : 'blueprint' , 'gazebo_version' : '2' }, ], 'gazebo' : [ { 'name' : 'gazebo11' , 'ubuntu_distro' : '20.04' , 'gazebo_release' : '11' }, { 'name' : 'gazebo10' , 'ubuntu_distro' : '18.04' , 'gazebo_release' : '10' }, ] } build.py List of default targets for the dockerfiles. Source code in workspace/build.py def targets (): \"\"\"List of default targets for the dockerfiles.\"\"\" return [ \"base\" , \"dev\" , \"full\" , \"gazebo\" ] List of images and build settings. Source code in workspace/build.py def images (): \"\"\"List of images and build settings.\"\"\" return { \"kinetic\" : { \"repository\" : \"ros\" , \"targets\" : targets () }, \"melodic\" : { \"repository\" : \"ros\" , \"targets\" : targets () }, \"noetic\" : { \"repository\" : \"ros\" , \"targets\" : targets () }, \"dashing\" : { \"repository\" : \"ros2\" , \"targets\" : targets () }, \"eloquent\" : { \"repository\" : \"ros2\" , \"targets\" : targets () }, \"foxy\" : { \"repository\" : \"ros2\" , \"targets\" : targets () }, \"gazebo10\" : { \"repository\" : \"gazebo\" , \"targets\" : [ \"base\" , \"dev\" ] }, \"gazebo11\" : { \"repository\" : \"gazebo\" , \"targets\" : [ \"base\" , \"dev\" ] }, \"blueprint\" : { \"repository\" : \"ignition\" , \"targets\" : [ \"base\" , \"dev\" ] }, \"citadel\" : { \"repository\" : \"ignition\" , \"targets\" : [ \"base\" , \"dev\" ] }, \"pages\" : { \"repository\" : \"github\" , \"targets\" : [ \"dev\" ] }, }","title":"athackst/dockerfiles"},{"location":"#athackstdockerfiles","text":"These are multi-stage docker images I use for developing with VSCode . See how I develop with vscode and docker . Instructions on how to duplicate my IDE: vscode, docker, and ros2 vscode, docker, and github pages","title":"athackst/dockerfiles"},{"location":"#quick-start","text":"Grab the docker image from docker hub athackst/ros athackst/ros2 athackst/gazebo atahckst/igntion athackst/github Set up a vscode workspace","title":"Quick start"},{"location":"#build-the-dockerfiles","text":"Create the docker images ./build.py all To see help information on the update script ./build.py --help","title":"Build the dockerfiles"},{"location":"#reference","text":"","title":"Reference"},{"location":"#generatepy","text":"","title":"generate.py"},{"location":"#generate.templates","text":"Dictionary of dockerfile templates and settings. Source code in workspace/generate.py def templates (): \"\"\"Dictionary of dockerfile templates and settings.\"\"\" return { 'ros2' : [ { 'name' : 'foxy' , 'ubuntu_distro' : '20.04' , 'ros_distro' : 'foxy' , 'python_version' : '3.8' }, { 'name' : 'eloquent' , 'ubuntu_distro' : '18.04' , 'ros_distro' : 'eloquent' , 'python_version' : '3.6' }, { 'name' : 'dashing' , 'ubuntu_distro' : '18.04' , 'ros_distro' : 'dashing' , 'python_version' : '3.6' }, { 'name' : 'crystal' , 'ubuntu_distro' : '16.04' , 'ros_distro' : 'crystal' , 'python_version' : '3.6' }, ], 'ros' : [ { 'name' : 'noetic' , 'ubuntu_distro' : '20.04' , 'ros_distro' : 'noetic' , 'python_version' : '3' , 'python_env' : '3' }, { 'name' : 'melodic' , 'ubuntu_distro' : '18.04' , 'ros_distro' : 'melodic' , 'python_version' : '2.7' , 'python_env' : '' }, { 'name' : 'kinetic' , 'ubuntu_distro' : '16.04' , 'ros_distro' : 'kinetic' , 'python_version' : '2.7' , 'python_env' : '' } ], 'ignition' : [ { 'name' : 'citadel' , 'ubuntu_distro' : '18.04' , 'ign_distro' : 'citadel' , 'gazebo_version' : '3' }, { 'name' : 'blueprint' , 'ubuntu_distro' : '18.04' , 'ign_distro' : 'blueprint' , 'gazebo_version' : '2' }, ], 'gazebo' : [ { 'name' : 'gazebo11' , 'ubuntu_distro' : '20.04' , 'gazebo_release' : '11' }, { 'name' : 'gazebo10' , 'ubuntu_distro' : '18.04' , 'gazebo_release' : '10' }, ] }","title":"generate.templates"},{"location":"#buildpy","text":"","title":"build.py"},{"location":"#build.targets","text":"List of default targets for the dockerfiles. Source code in workspace/build.py def targets (): \"\"\"List of default targets for the dockerfiles.\"\"\" return [ \"base\" , \"dev\" , \"full\" , \"gazebo\" ]","title":"build.targets"},{"location":"#build.images","text":"List of images and build settings. Source code in workspace/build.py def images (): \"\"\"List of images and build settings.\"\"\" return { \"kinetic\" : { \"repository\" : \"ros\" , \"targets\" : targets () }, \"melodic\" : { \"repository\" : \"ros\" , \"targets\" : targets () }, \"noetic\" : { \"repository\" : \"ros\" , \"targets\" : targets () }, \"dashing\" : { \"repository\" : \"ros2\" , \"targets\" : targets () }, \"eloquent\" : { \"repository\" : \"ros2\" , \"targets\" : targets () }, \"foxy\" : { \"repository\" : \"ros2\" , \"targets\" : targets () }, \"gazebo10\" : { \"repository\" : \"gazebo\" , \"targets\" : [ \"base\" , \"dev\" ] }, \"gazebo11\" : { \"repository\" : \"gazebo\" , \"targets\" : [ \"base\" , \"dev\" ] }, \"blueprint\" : { \"repository\" : \"ignition\" , \"targets\" : [ \"base\" , \"dev\" ] }, \"citadel\" : { \"repository\" : \"ignition\" , \"targets\" : [ \"base\" , \"dev\" ] }, \"pages\" : { \"repository\" : \"github\" , \"targets\" : [ \"dev\" ] }, }","title":"build.images"}]}